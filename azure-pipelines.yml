# vim: se expandtab ts=4 sw=2 ai

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: x64
  buildConfiguration: 'Release'

steps:
  - script: |
      for /f "usebackq tokens=*" %%l in (`"c:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -property installationPath`) do set bar=%%l
      call "%bar%"\Common7\Tools\VsDevCmd.bat -arch=$(BuildPlatform)
      copy config\win32 config.h
      nmake -f win32\makefile.win32  FASTBUILD=1
    displayName: Build

#  - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(System.DefaultWorkingDirectory)/tcsh-x64.exe'
#      artifact: 'binary'
#      publishLocation: 'pipeline'
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: github.com_amoldeshpande
      repositoryName: $(Build.Repository.Name) 
      #action: 'create' # Options: create, edit, delete
      #target:  # Required when action == Create || Action == Edit
      tagSource: 'manual' # Required when action == Create# Options: auto, manual
      #tagPattern: # Optional
      tag: $(Build.BuildNumber) # Required when action == Edit || Action == Delete || TagSource == Manual
      title: $(Build.BuildNumber) Release from $(Build.SourceBranchName) # Optional
      #releaseNotesSource: 'file' # Optional. Options: file, input
      #releaseNotesFile: # Optional
      #releaseNotes: # Optional
      assets: '$(System.DefaultWorkingDirectory)/tcsh-x64.exe' # Optional
      #assetUploadMode: 'delete' # Optional. Options: delete, replace
      #isDraft: true # Optional
      #isPreRelease: false # Optional
      #addChangeLog: true # Optional
      #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
      #releaseTag: # Required when compareWith == LastReleaseByTag
